class Solution {
    int findMaxSum(int arr[], int n) {
        if(n==1)
        return arr[0];
        int [] dp=new int[n];
        dp[0]=arr[0];
        dp[1]=arr[1];
        for(int i=2;i<n;i++)
        {
            if(i==2)
            {
             dp[2]=arr[2]+dp[0];
             continue;
            }
            dp[i]=Math.max(dp[i-2],dp[i-3])+arr[i];
        }
        return Math.max(dp[n-1],dp[n-2]);
    }
    //we can not take adjacent value but we can take value other than adjacent 
    //so the maximum sum will be comming from the sum till 2 nd element or sum till 3rd element as 
    //third is adjacen t to second elemnt of i that's why it is carryinf different valeu 
    // by their we can form dp to get maximum sum\
}
