class Solution {
    // Function to detect cycle in an undirected graph.
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj) {
        // Code here
      boolean []visited=new boolean[V];
    //   boolean []stack=new boolean[V];
      for(int i=0;i<V;i++)
      {
          
           if(!visited[i])
           {
               if(dfs(i,adj,visited,-1))
               return true;
           }
          
      }
      return false;
    }
    boolean dfs(int cv,ArrayList<ArrayList<Integer>> adj,boolean []visited, int prev)
    {
        if(visited[cv])
        return true;
        
        visited[cv]=true;
        for(int i=0;i<adj.get(cv).size();i++)
        {
             int cur=adj.get(cv).get(i);
             if(cur==prev)
             continue;
             if(dfs(cur,adj,visited,cv))
             return true;
        }
        return false;
    }
}
