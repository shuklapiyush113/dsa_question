class Solution{

    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long maxSubarraySum(int arr[], int n){
        
        int i=0;
         int max_sum=Integer.MIN_VALUE;
         int current=0;
         for(i=0;i<n;i++)
         {
             current=current+arr[i];
             if(current>max_sum)
             {
                 max_sum=current;
             }
              if(current<0)
             {
                 current=0;
             }
         }
        return max_sum;// Your code here
        
    }

}

we are making our cursum=0 if the cursum <0 reason-(because negative becaue if negative is added to negative sum then it will be more less than the currsum and 
if we add positive number than positive number itself is greater than the negative cursum )
and then we are checking everytime if cursum is gretaer than the max sum then we are updating the maxsum with the curr sum  
